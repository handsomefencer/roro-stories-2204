version: 2
jobs:
  release:
    docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - run:
        command: gem install roro
    - run:
        command: roro generate::exposed ci
    - run:
        command: |
          echo $(cat ./roro/containers/ruby_image/ci.env) >> $BASH_ENV
          source $BASH_ENV
    - run:
        command: chmod +x ./.circleci/setup-gem-credentials.sh
    - run:
        command: ./.circleci/setup-gem-credentials.sh
    - run:
        command: chmod 0600 ~/.gem/credentials
    - run:
        command: git checkout .
    - run:
        command: gem release
  test-against-ruby-2.6:
    docker:
    - image: cimg/ruby:2.6
    steps:
    - checkout
    - run:
        command: gem install bundler
    - run:
        command: bundle
    - run:
        command: bundle exec rake test
  ? |-
    test-rollon-1
    1-linux
  : docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "1
          1\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
  ? |-
    test-rollon-3
    1-linux
  : docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "3
          1\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
  test-against-ruby-2.5:
    docker:
    - image: cimg/ruby:2.5
    steps:
    - checkout
    - run:
        command: gem install bundler
    - run:
        command: bundle
    - run:
        command: bundle exec rake test
  ? |-
    test-rollon-2
    1-linux
  : docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "2
          1\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
  ? |-
    test-rollon-3
    2-linux
  : docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "3
          2\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
  test-against-ruby-2.7:
    docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - run:
        command: gem install bundler
    - run:
        command: bundle
    - run:
        command: bundle exec rake test
  ? |-
    test-rollon-1
    4-linux
  : docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "1
          4\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
  ? |-
    test-rollon-1
    3-linux
  : docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "1
          3\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
  build:
    docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
  test-rollon:
    docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "1
          4\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
  ? |-
    test-rollon-1
    2-linux
  : docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "1
          2\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
  test-against-ruby-3.0:
    docker:
    - image: cimg/ruby:3.0
    steps:
    - checkout
    - run:
        command: gem install bundler
    - run:
        command: bundle
    - run:
        command: bundle exec rake test
  ? |-
    test-rollon-1
    5-linux
  : docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.12
    - run:
        command: |
          rake install &&
          printf "1
          5\ny\ny\ny\ny\ny\ny\ny$var\n" | roro rollon
    - run:
        command: echo 'success'
workflows:
  version: 2
  test-all-cases:
    jobs:
    - ? |-
        test-rollon-1
        1-linux
      : filters:
          branches:
            only: master
    - ? |-
        test-rollon-1
        2-linux
      : filters:
          branches:
            only: master
    - ? |-
        test-rollon-1
        3-linux
      : filters:
          branches:
            only: master
    - ? |-
        test-rollon-1
        4-linux
      : filters:
          branches:
            only: master
    - ? |-
        test-rollon-1
        5-linux
      : filters:
          branches:
            only: master
    - ? |-
        test-rollon-2
        1-linux
      : filters:
          branches:
            only: master
    - ? |-
        test-rollon-3
        1-linux
      : filters:
          branches:
            only: master
    - ? |-
        test-rollon-3
        2-linux
      : filters:
          branches:
            only: master
  test-against-common-rubies:
    jobs:
    - test-against-ruby-2.5:
        filters:
          branches:
            only: master
    - test-against-ruby-2.6:
        filters:
          branches:
            only: master
    - test-against-ruby-2.7:
        filters:
          branches:
            only: master
    - test-against-ruby-3.0:
        filters:
          branches:
            only: master
  build-cli:
    jobs:
    - build:
        filters:
          branches:
            only: master
    - test-rollon:
        filters:
          branches:
            only: master
    - release:
        filters:
          branches:
            only: release
        requires:
        - build

# Original config.yml file:
# version: 2.1
# 
# executors:
#   machine-executor:
#     machine: true
#   ruby-executor:
#     docker:
#       - image: cimg/ruby:2.7
#   linux:
#     docker:
#       - image: cimg/ruby:2.7
#   mac:
#     macos:
#       xcode: 11.4
#   ruby:
#     parameters:
#       version:
#         description: \"version tag\"
#         default: '2.5'
#         type: string
#     docker:
#       - image: cimg/ruby:<<parameters.version>>
# 
# aliases:
#   - &workspace-location
#     at: /tmp/workspace
#   - &copy-ci-dotenv | 
#     cp -rf /tmp/workspace/roro .
#   - &source-ci-variables | 
#     echo 'source roro/containers/app/ci.env' >> $BASH_ENV
#     source $BASH_ENV
# 
# defaults: &defaults
#   executor: ruby-executor
#   working_directory: &workspace-location
# 
# major_only: &major_only
#   filters:
#     branches:
#       only: master
# 
# release: &release
#   filters:
#     branches:
#       only: release
# 
# commands:
#   run-test-case:
#     parameters:
#       answers:
#         type: string
#         default: \"1\\n2\"
#       os:
#         type: executor
#     steps:
#       - run: |
#           rake install &&
#           printf \"<< parameters.answers >>\\ny\\ny\\ny\\ny\\ny\\ny\\ny$var\\n\" | roro rollon
#       - run: echo 'success'
# 
# jobs:
#   build:
#     <<: *defaults
#     steps:
#       - checkout
# 
# 
#   test-against-ruby:
#     parameters:
#       version:
#         description: \"version tag\"
#         default: \"3.0\"
#         type: string
#     executor:
#       name: ruby
#       version: <<parameters.version>>
#     steps:
#       - checkout
#       - run: gem install bundler
#       - run: bundle
#       - run: bundle exec rake test
# 
#   test-rollon:
#     parameters:
#       answers:
#         type: string
#         default: \"1\\n4\"
#       os:
#         type: executor
#         default: linux
#     executor: << parameters.os >>
#     steps:
#       - checkout
#       - setup_remote_docker:
#           version: 19.03.12
#       - run-test-case:
#           answers: << parameters.answers >>
#           os: << parameters.os >>
# 
#   release:
#     <<: *defaults
#     steps:
#       - checkout
#       - run: gem install roro
#       - run: roro generate::exposed ci
#       - run: | 
#           echo $(cat ./roro/containers/ruby_image/ci.env) >> $BASH_ENV
#           source $BASH_ENV
#       - run: chmod +x ./.circleci/setup-gem-credentials.sh
#       - run: ./.circleci/setup-gem-credentials.sh
#       - run: chmod 0600 ~/.gem/credentials
#       - run: git checkout .
#       - run: gem release
# 
# workflows:
#   version: 2.1
#   test-all-cases:
#     jobs:
#       - test-rollon:
#           <<: *major_only
#           matrix:
#             parameters:
#               answers: [\"1\\n1\", \"1\\n2\", \"1\\n3\", \"1\\n4\", \"1\\n5\", \"2\\n1\", \"3\\n1\", \"3\\n2\"]
#               os: [linux]
# 
#   test-against-common-rubies:
#     jobs:
#       - test-against-ruby:
#           <<: *major_only
#           matrix:
#             parameters:
#               version: [ \"2.5\", \"2.6\", \"2.7\", \"3.0\" ]
# 
#   build-cli: 
#     jobs: 
#       - build: 
#           <<: *major_only
#           <<: *release
#       - test-rollon:
#           <<: *major_only
# 
#       - release:
#           requires: 
#             - build
#           <<: *release
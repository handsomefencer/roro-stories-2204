FROM ruby:<%= @env[:base][:ruby_version][:value] %>-alpine

ENV BUNDLER_VERSION=<%= @env[:base][:bundler_version][:value] %>

RUN apk add --update --no-cache \
  binutils-gold \
  build-base \
  curl \
  file \
  g++ \
  gcc \
  git \
  less \
  libstdc++ \
  libffi-dev \
  libc-dev \
  linux-headers \
  libxml2-dev \
  libxslt-dev \
  libgcrypt-dev \
  make \
  netcat-openbsd \
  nodejs \
  openssl \
  pkgconfig \
  postgresql-dev \
  python \
  tzdata \
  yarn

RUN gem install bundler -v ${BUNDLER_VERSION}

WORKDIR /app

COPY Gemfile Gemfile.lock ./

RUN bundle check || bundle install

COPY package.json yarn.lock ./

RUN yarn install --check-files

COPY . ./

RUN bundle exec rake webpacker:compile

CMD ["./entrypoints/docker-entrypoint.sh"]




#FROM ruby:<%= @env[:base][:ruby_version][:value] %>
#RUN apt-get update -qq && apt-get install -y nodejs postgresql-client
#WORKDIR /myapp
COPY Gemfile /myapp/Gemfile
COPY Gemfile.lock /myapp/Gemfile.lock
RUN bundle install

  # Add a script to be executed every time the container starts.
COPY entrypoint.sh /usr/bin/
RUN chmod +x /usr/bin/entrypoint.sh
ENTRYPOINT ["entrypoint.sh"]
EXPOSE 3000

  # Configure the main process to run when running the image
CMD ["rails", "server", "-b", "0.0.0.0"]
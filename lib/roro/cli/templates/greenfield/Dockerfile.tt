FROM ruby:<%= config[:ruby_version] %> AS builder

## Make sure we have yarn properly sourced:
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

## Update OS and download yarm from source specified above:
RUN apt-get update -qq && apt-get install -y build-essential git nodejs yarn

## Set up our workspace:
ENV APP_HOME /usr/src/app/
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

## Tell bundler where to store downloaded gems:
ENV BUNDLE_PATH /gems

## Create volumes for gems and our app, so that both can be shared with 
## other containers:
VOLUME ${APP_HOME}
VOLUME /gems

## Create a Gemfile with Rails and then bundle it to install:
RUN echo "source 'https://rubygems.org'\ngem 'rails'" > Gemfile
RUN bundle

## Use Rails to generate a new app but to help with debugging,  
## split bundling, installing webpacker, and installing yarn into steps.
RUN bundle exec rails new . --skip-webpack-install
RUN bin/rails webpacker:install 
RUN bin/rails webpacker:yarn_install 

## Tell docker not to create a layer:
FROM scratch AS export-stage

## Copy files generated by this container onto the host:
COPY --from=builder /usr/src/app/ .



commands:
    build-roro-image:
        steps:
            - run: |
                sudo chown -R $USER:$USER .
                sudo docker-compose build
            - run: "sudo docker run \\\n  --name ${APP_NAME} \\\n  -v ${PWD}:/${APP_NAME} \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -u 0 \\\n  -it handsomefencer/roro:latest \\\n  sh -c \"printf '${ANSWERS}\\na\\n' | roro rollon\"\ncontainer=$(sudo docker ps -aqf \"name=${APP_NAME}\")\necho \"export container=${container}\" >> \"$BASH_ENV\"\ncat $BASH_ENV\nsudo docker cp ${container}:/artifact ./${APP_NAME}\nls -a\nsudo chown -R $USER:$USER ./${APP_NAME}\nls ${APP_NAME} \ncd ${APP_NAME} \nls -a\ncat entrypoints/docker-entrypoint.sh\nchmod +x entrypoints/docker-entrypoint.sh\n \n"
    restore-and-save-cache:
        steps:
            - restore_cache:
                key: circlev2-{{ checksum "Gemfile.lock" }}
            - run: bundle config set --local path 'vendor/bundle'
            - run: bundle check || bundle install --jobs=4 --retry=3
            - run: gem build roro.gemspec
            - save_cache:
                key: circlev2-{{ checksum "Gemfile.lock" }}
                paths:
                    - vendor/bundle
    rollon-adventure-with-roro:
        steps:
            - run:
                command: |
                    app_name="artifact-${answers//\\/-}"
                    echo "export answers=${answers}" >> "$BASH_ENV"
                    echo "export app_name='${app_name}'" >> "$BASH_ENV"
                name: rollon from roro image
    set-variables:
        steps:
            - run:
                command: |
                    echo "APP_NAME=${CIRCLE_JOB//\\n/-}" >> "$BASH_ENV"
                name: Store answers and app_name variables
executors:
    cimg-base:
        docker:
            - image: cimg/base:2023.06
    machine-ubuntu:
        machine:
            image: ubuntu-2004:202010-01
    ruby:
        docker:
            - image: cimg/ruby:<<parameters.version>>
        parameters:
            version:
                default: 3.2.2
                description: version tag
                type: string
jobs:
    build:
        executor:
            name: cimg-base
        steps:
            - checkout
    release:
        executor:
            name: ruby
        steps:
            - checkout
            - run: |
                git config --global user.email "fred.schoeneman@gmail.com"
                git config --global user.name "Fred Schoeneman"
            - run: gem install gem-release
            - run: gem bump
            - run: gem release
    test-adventures:
        environment:
            - ANSWERS: << parameters.answers >>
        executor: machine-ubuntu
        parameters:
            answers:
                default: 1\1
                type: string
            os:
                default: cimg-base
                type: executor
        steps:
            - checkout
            - set-variables
            - build-roro-image
    test-rubies:
        executor:
            name: ruby
            version: <<parameters.version>>
        parameters:
            version:
                default: "3.0"
                description: version tag
                type: string
        steps:
            - checkout
            - run: gem install bundler
            - run: bundle
            - run: bundle exec rake test:test
            - run: bundle exec rake test:stacks
version: 2.1
workflows:
    adventures:
        jobs:
            - build
            - test-adventures:
                filters:
                    branches:
                        only:
                            - machine-ubuntu
                matrix:
                    parameters:
                        answers:
                            - 1\n1\n1
                        os:
                            - cimg-base
                requires:
                    - build
    gem-release:
        jobs:
            - build
            - release:
                filters:
                    branches:
                        only:
                            - gem-release
    rubies:
        jobs:
            - test-rubies:
                filters:
                    branches:
                        only: rubies
                matrix:
                    parameters:
                        version:
                            - "3.0"
                            - "2.7"
                            - "2.6"
                            - "2.5"


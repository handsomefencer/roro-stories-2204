version: 2.1

jobs:

  build:
    machine: true
    steps:
      - checkout
  
  test:
    machine: true
    steps:
      - checkout
      - run: RUBY_VERSION=2.5 docker-compose build ruby_gem
      - run: RUBY_VERSION=2.5 docker-compose up -d --force-recreate ruby_gem
      - run: RUBY_VERSION=2.5 docker-compose run ruby_gem bundle exec rake test
      - run: RUBY_VERSION=2.6 docker-compose build ruby_gem
      - run: RUBY_VERSION=2.6 docker-compose up -d --force-recreate ruby_gem
      - run: RUBY_VERSION=2.6 docker-compose run ruby_gem bundle exec rake test
      - run: RUBY_VERSION=2.7 docker-compose build ruby_gem
      - run: RUBY_VERSION=2.7 docker-compose up -d --force-recreate ruby_gem
      - run: RUBY_VERSION=2.7 docker-compose run ruby_gem bundle exec rake test    
      
  release:
    machine: true
    steps:
      - checkout
      - run: gem install roro
      - run: roro generate::exposed ci
      # - run:
      #   name: Update PATH and Define Environment Variable at Runtime
      #   command: |
      #     echo 'export PATH=/path/to/foo/bin:$PATH' >> $BASH_ENV
      #     echo 'export VERY_IMPORTANT=$(cat important_value)' >> $BASH_ENV
      #     echo 'cat roro/containers/ruby_image/ci.env' >> $BASH_ENV
      #     source $BASH_ENV
      - run: source roro/containers/ruby_image/ci.env >> $BASH_ENV
      - run: | 
          FIRST_PART='---\r\n:rubygems_api_key: '
          echo -e $FIRST_PART$RUBYGEMS_API_KEY > ~/.gem/credentials
      # - run:  
      #     name: Create gem credentials
      #     command: [echo -e '---\r\n:rubygems_api_key: $RUBYGEMS_API_KEY' > ~/.gem/credentials]
      - run: chmod 0600 ~/.gem/credentials
      # - run: chmod +x ./.circleci/setup-gem-credentials.sh
      # - run: ./.circleci/setup-gem-credentials.sh
      - run: cat ~/.gem/credentials
      - run: git checkout .
      - run: ${RUBYGEMS_API_KEY}
      - run: $RUBYGEMS_API_KEY
      - run: gem release 
  
workflows:
  version: 2
    
  build-release: 
    jobs: 
      - build
      - test:
          filters: 
            branches: 
              only: development, master
      
      - release:
          requires: 
            - build
          filters: 
            branches: 
              only: release
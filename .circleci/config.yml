defaults: &defaults
  working_directory: /tmp

version: 2

jobs:

  build:
    docker:
       - image: circleci/ruby:2.5.1
    steps:
      - checkout
      - setup_remote_docker
      - run: gem install bundler
      - run: rake install
      - run: bundle
      e- run:
          command: |
            mkdir -p sooperdooper
            cd sooperdooper
            roro greenfield
            docker-compose run app rails new . --force --database=postgresql
            roro rollon
            chown -R $USER:$USER -R .
            docker-compose up -d --build
            docker-compose exec app bin/rails db:create db:migrate
      - run: curl -Is localhost:3000 | head -n 1

#   push:
#     machine: true
#     steps:
#       - checkout
#       - run: gem install handsome_fencer-circle_c_i
#       - run: handsome_fencer-circle_c_i expose circleci
#       - run: handsome_fencer-circle_c_i expose development
#       - run: echo 'source docker/env_files/circleci.env' >> $BASH_ENV
#       - run: docker-compose build app web
#       - run: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
#       - run:
#           name: Tag app image
#           command: docker tag $(docker images | grep project_app | awk '{ print $3 }') ${DOCKERHUB_ORG_NAME}/${APP_NAME}_app:$DEPLOY_TAG
#       - run:
#           name: Tag web image
#           command: docker tag $(docker images | grep project_web | awk '{ print $3 }') ${DOCKERHUB_ORG_NAME}/${APP_NAME}_web:$DEPLOY_TAG
#
#
#       - run: docker push ${DOCKERHUB_ORG_NAME}/${APP_NAME}_app:$DEPLOY_TAG
#       - run: docker push ${DOCKERHUB_ORG_NAME}/${APP_NAME}_web:$DEPLOY_TAG
#
#   deploy:
#     machine: true
#     steps:
#       - checkout
#       - add_ssh_keys
#       - run: gem install handsome_fencer-circle_c_i
#       - run: handsome_fencer-circle_c_i expose circleci
#       - run: handsome_fencer-circle_c_i expose development
#       - run: echo 'source docker/env_files/circleci.env' >> $BASH_ENV
#
#       - run: rake --rakefile .circleci/Rakefile
#
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      # - deploy:
      #     requires:
      #       - push
      #     filters:
      #       branches:
      #         only: master

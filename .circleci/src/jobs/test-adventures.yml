environment: 
  - ANSWERS: "<< parameters.answers >>"
parameters:
  answers:
    type: string
    default: 1\1
  os:
    type: executor
    default: cimg-base
executor: machine-ubuntu

steps:
  - checkout
  - restore-and-save-cache
  - run: |
      docker --version
      docker-compose --version
  - set-variables  
  - build-roro-image   
      
#      echo "answers = ${ANSWERS}"   

      
  # - run: 
      # echo "bar     = ${bar}"
      # echo "params  = $(<< parameters.answers >>)"   
  # - run: echo "${demo_app}"   
  # - run: |
  #     source $BASH_ENV 
  #     sudo docker run \
  #       --name ${app_name} \
  #       -v ${PWD}:/${app_name} \
  #       -v /var/run/docker.sock:/var/run/docker.sock \
  #       -u 0 \
  #       -it handsomefencer/roro:latest \
  #       sh -c "printf \"${answers}\na\n\" | roro rollon"
  #     container=$(sudo docker ps -aqf "name=${app_name}")
  #     echo "export container=${container}" >> "$BASH_ENV"
  #     source $BASH_ENV
  #     sudo docker cp ${container}:/${app_name} ./

  #     ls ${app_name}
  # - run:
        # sh -c "printf '<< parameters.answers >>\na\n' | roro rollon"
  #     name: "Store container id variable"
  #     command: |
  #       source $BASH_ENV
  #       container=$(sudo docker ps -aqf "name=${app_name}")
  #       echo "export container=${container}" >> "$BASH_ENV"
  
  # - run: 
  #     name: 'Copy from container into sandbox'
  #     command: |
  #       cat $BASH_ENV
  #       source $BASH_ENV

  # - run: 
        # sudo chown -R $USER:$USER .
        # sudo docker cp ${container}:/${app_name}/. ./
        # sudo docker-compose build 
        # sudo docker-compose up -d
        # echo ${container}
        # echo ${answers}
        # echo ${PWD}
        # ls -a
        # ls -a /home/circleci/sandbox/
        # sudo chown -R $USER:$USER . 
      


  #     container_id="$(sudo docker ps -aqf "name=${name}")"
  # - run: ls -a
  # - run: sudo docker-compose build
  # - run: sudo docker-compose build
  # - run: printenv
  # - run: echo ${PWD}